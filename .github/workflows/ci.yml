name: CI Standard
# the action will run when ...
on:
  # ... manually triggered
  workflow_dispatch:
  # ... a commit is pushed to branch 'main'
  push:
    branches:
      - main
  # ... a commit is pushed to a PR
  pull_request:

jobs:
  # no cache needed for rustfmt
  format:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - run: cargo fmt --all -- --check

  # no cache needed for cargo outdated
  outdated:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - run: cargo outdated --exit-code 1

  # no cache needed for cargo deny
  deny:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: EmbarkStudios/cargo-deny-action@v1

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: Swatinem/rust-cache@v2
      with:
        prefix-key: cargo
        key: build
        shared-key: cargo-build
    - run: cargo build --all-features --all-targets --release

  build-check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: Swatinem/rust-cache@v2
      with:
        prefix-key: cargo
        key: build
        shared-key: cargo-check
    - run: cargo check --all-features --all-targets

  clippy:
    runs-on: ubuntu-latest
    needs: build-check
    steps:
    - uses: actions/checkout@v3
    - uses: Swatinem/rust-cache@v2
      with:
        prefix-key: cargo
        key: build
        shared-key: cargo-check
        save-if: false
    - run: cargo clippy --all-features --all-targets -- --deny clippy::all

  build-tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: Swatinem/rust-cache@v2
      with:
        prefix-key: cargo
        key: build
        shared-key: cargo-test
    - run: cargo build --tests --all-features --all-targets

  test:
    runs-on: ubuntu-latest
    needs: build-tests
    steps:
    - uses: actions/checkout@v3
    - uses: Swatinem/rust-cache@v2
      with:
        prefix-key: cargo
        key: build
        shared-key: cargo-test
        save-if: false
    - run: cargo test --all-features --all-targets

  build-nightly:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: Swatinem/rust-cache@v2
      with:
        prefix-key: cargo
        key: build
        shared-key: cargo-nightly
    - run: |
        rustup toolchain install nightly
        rustup default nightly
    - run: cargo +nightly build --all-features --all-targets

  udeps:
    runs-on: ubuntu-latest
    needs: build-nightly
    steps:
    - uses: actions/checkout@v3
    - uses: Swatinem/rust-cache@v2
      with:
        prefix-key: cargo
        key: build
        shared-key: cargo-nightly
        save-if: false
    - run: |
        wget https://github.com/est31/cargo-udeps/releases/download/v0.1.40/cargo-udeps-v0.1.40-x86_64-unknown-linux-gnu.tar.gz
        tar xzf cargo-udeps-v0.1.40-x86_64-unknown-linux-gnu.tar.gz
        mv cargo-udeps-v0.1.40-x86_64-unknown-linux-gnu/cargo-udeps ~/.cargo/bin/cargo-udeps
    - run: |
        rustup toolchain install nightly
        rustup default nightly
    - run: cargo udeps --all-features --all-targets
